apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "br.com.luan.myskeletonv2"
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def code = versionProps['VERSION_CODE'].toInteger()

        defaultConfig {
            applicationId "br.com.luan.myskeletonv2"
            minSdkVersion 19
            targetSdkVersion 25
            versionCode code
            versionName "1.0." + code
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig getSigningConfig()
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def date = new Date();
                    def formattedDate = date.format('ddMMyyyyHHmm')
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name
                                    .replace("app-release", "myskeletonv2" + formattedDate + "-" + variant.versionName)

                    )
                }
            }
        }

    }

    android.applicationVariants.all { variant ->
        variant.mergeResources.dependsOn {
            updateVersion(variant)
        }
    }


}

def updateVersion(def buildVariant) {
    if (buildVariant.name.equals("release")) {
        def versionPropsFile = file('version.properties')

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()

            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['VERSION_CODE'].toInteger() + 1

            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"




    compile 'io.supercharge:shimmerlayout:2.0.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.slider:library:1.1.5@aar'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'org.jetbrains.anko:anko-commons:0.10.3'
    compile 'org.jetbrains.anko:anko-design:0.10.3'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:palette-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.vicmikhailau:MaskedEditText:2.0.2'
    compile 'com.google.firebase:firebase-core:11.0.1'
    compile 'com.google.firebase:firebase-messaging:11.0.1'
    compile 'me.relex:circleindicator:1.2.2@aar'
    compile 'com.github.d-max:spots-dialog:0.7'
    compile 'com.google.android.gms:play-services-maps:11.0.1'
    compile 'com.google.android.gms:play-services-location:11.0.1'
    compile 'com.appolica:interactive-info-window:v1.0.6'
    compile 'com.iarcuschin:simpleratingbar:0.1.5'
    compile 'com.github.delight-im:Android-AdvancedWebView:v3.0.0'
    compile 'com.github.chrisbanes:PhotoView:2.0.0'
    compile 'nl.dionsegijn:konfetti:1.1.0'
    testCompile 'junit:junit:4.12'
    debugCompile 'com.amitshekhar.android:debug-db:1.0.0'
}
repositories {
    mavenCentral()
}
apply plugin: 'com.google.gms.google-services'
